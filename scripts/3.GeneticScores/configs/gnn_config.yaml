# Configuración específica para modelos GNN
# Enfocada en la generación de grafos con información rica de mutaciones

# Rutas de datos (simplificadas)
data_paths:
  base_path: "/home/cruiza/data/cruiza/MDS_subtypes"
  
  # Archivo con variables clínicas, mutaciones binarizadas y folds CV (para nodos de pacientes)
  clinical_mutations_file: "data/processed/clinical_mutations_combined.tsv"
  
  # Archivo con mutaciones priorizadas y VAF (para edges y nodos de genes)
  mutations_vaf_file: "data/processed/mutations_prioritized.tsv"
  
  # Archivo con embeddings de genes pre-entrenados (opcional)
  gene_embeddings_file: "data/scGPT/gene_embeddings.npy"

# Procesamiento de variables para GNN (más permisivo para capturar relaciones)
variable_processing:
  continuous_variables:
    - "Age"
    - "HB"
    - "ANC"
    - "PLT"
    - "BM_BLAST"
    - "PB_BLAST"
  
  categorical_variables:
    - "Sex"
    - "Cytogenetics_IPSS"
    - "WHO_Classification"
  
  binary_variables:
    - "Complex_Karyotype"
  
  # Variables de supervivencia (outputs del modelo)
  survival_variables:
    time_variable: "OS"
    status_variable: "OS_STATUS"
  
  # Selección de genes para GNN (opcional)
  gene_selection:
    # Para GNN, por defecto incluir todos los genes disponibles
    selected_genes: null
    
    # Criterios más permisivos para GNN
    auto_selection_criteria:
      min_mutation_frequency: 0.02  # 2% para capturar más mutaciones raras
      max_genes: 100  # Más genes para el grafo
  
# Configuración específica para GNN
data_generation:
  output_formats:
    - "graph"  # Solo grafos
  
  graph_format:
    graph_type: "patient_gene"
    
    # Features enriquecidas para nodos de pacientes
    patient_node_features: "clinical_and_binary_mutations"
    
    # Features para nodos de genes
    gene_node_features:
      feature_type: "both"  # Usar tanto VAF stats como embeddings si están disponibles
      embedding_source: "scgpt"
      embedding_dimension: 512
    
    edge_criteria:
      # Usar VAF como filtro para seleccionar qué mutaciones incluir (NO como peso)
      use_vaf_filter: true
      
      # Umbral VAF más bajo para capturar más mutaciones
      min_vaf_threshold: 0.03
        
    output_filename: "gnn_graph_data"

# Cross-validation desde archivo
cross_validation:
  n_folds: 10
  fold_column: "fold"

# Salida optimizada para GNN
output:
  file_formats:
    graphs: "pickle"     # Mejor para PyTorch Geometric
    metadata: "json"
  
  compression: null      # Sin compresión para compatibilidad
  validate_output: true
  save_config_copy: true

# Logging detallado para debugging de grafos
logging:
  level: "DEBUG"
  save_to_file: true
  log_filename: "prepare_data_gnn.log"
